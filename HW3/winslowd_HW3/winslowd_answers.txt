-------------------------------------------------------------------
Profiling Results
-------------------------------------------------------------------

qsort_large spends 68% of its time executing the function compare() based on the flat profile.


-------------------------------------------------------------------
Optimization
-------------------------------------------------------------------

User Timings
+-----------------------+--------------------+--------------------+
|Optimizations          |Time on eng-grid    |Time on BeagleBone  |
+-----------------------+--------------------+--------------------+
|Default                | 0m0.035s           | 0m0.058s           |
+-----------------------+--------------------+--------------------+
|Source Code Opt.       | 0m0.032s           | 0m0.053s           |
+-----------------------+--------------------+--------------------+
|Compiler Opt.          | 0m0.033s           | 0m0.051s           |
+-----------------------+--------------------+--------------------+
|Optional 1 & 2 combined| 0m0.027s           | 0m0.050s           |
+-----------------------+--------------------+--------------------+

Source Code Optimizations: - Eliminated unnecessary step of taking square root of distance. Replaced pow() with x*x. Removed extra variable assignment in compare().

Compiler Optimizations: Used gcc -Ofast flag, which optimizes for max speed at cost of program size, memory usage, and IEEE standards compliance.

Difference btw grid and embedded: The BeagleBone completes the code just about twice as slowly. This is likely due to the generally slower speed of ahe BB SOC compared to a full workstation computer, which is optimized for more processing power rather than energy efficiency.
